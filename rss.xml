<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>austinbirch.co.uk</title>
    <link>http://austinbirch.co.uk/</link>
    <atom:link href="http://austinbirch.co.uk/rss.xml" rel="self" type="application/rss+xml" />
    <description>Austin Birch's blog</description>
    <language>en-us</language>
    <pubDate>Thu, 11 Jul 2013 19:58:19 +0100</pubDate>
    <lastBuildDate>Thu, 11 Jul 2013 19:58:19 +0100</lastBuildDate>

    
    <item>
      <title>Structuring a client-side JavaScript application</title>
      <link>http://austinbirch.co.uk/2013/05/23/structuring-a-client-side-javascript-application.html</link>
      <pubDate>Thu, 23 May 2013 00:00:00 +0100</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2013/05/23/structuring-a-client-side-javascript-application</guid>
      <description>&lt;p&gt;Deciding how to structure a client-side JavaScript application can be quite a challenge, as there are few popular conventions for doing so.&lt;/p&gt;

&lt;p&gt;For the application that I am writing at my current startup, BottleCRM, I have come up with what I think is an interesting approach, considering our particular requirements and restrictions.&lt;/p&gt;
&lt;!--more--&gt;&lt;div class='aside'&gt;&lt;p&gt;
I should warn you that this post turned out to be much longer than I
originally anticipated, and it is only a high-level overview of the structure
that I have used to develop BottleCRM.
&lt;br /&gt;&lt;br /&gt;
I plan on writing more in-depth posts (they will be shorter, more
technical, and include examples) about specifics later.
&lt;/p&gt;&lt;/div&gt;
&lt;h2 id='our_requirements'&gt;Our requirements&lt;/h2&gt;

&lt;p&gt;Firstly, I should explain that the BottleCRM application comes with a set of design restrictions that some other client-side JavaScript applications will not have to face, the biggest of which is our plugin system.&lt;/p&gt;

&lt;p&gt;BottleCRM will allow the user to write (or select from an app-store sort of arrangement), plugins that will be run on the client. The aim is to enable competent JavaScript programmers to customize the software to closer match their business needs.&lt;/p&gt;

&lt;p&gt;This is a bit of a nightmare for designing the fundamental structure, as decisions made now may be hard to change once third-parties (or even myself) write plugins that extend the functionality of the application.&lt;/p&gt;

&lt;p&gt;The more plugins there are, the harder it is to change the plugin system. The more complicated the plugin system is, the harder it is to write plugins that interact well with the application.&lt;/p&gt;

&lt;h2 id='modules'&gt;Modules&lt;/h2&gt;

&lt;p&gt;Structuring client-side JavaScript applications should be no different than structuring applications written in other languages, but as JavaScript (in the browser), has no real module loading system, amongst some other oddities, this can be a difficult task.&lt;/p&gt;

&lt;p&gt;You cannot really start to design a decoupled and flexible application without being able to separate the code into individual units. Because of this, the first thing that is required for application structure is a module system.&lt;/p&gt;

&lt;p&gt;The module system I am using is &lt;a href='http://component.io/'&gt;component&lt;/a&gt;, which works in a very similar way to &lt;a href='http://nodejs.org/'&gt;Node.js&lt;/a&gt; modules. I prefer the CommonJS style module declarations to the &lt;a href='http://requirejs.org/docs/whyamd.html'&gt;AMD&lt;/a&gt; style, (both systems have their own set of advantages/disadvantages), and using any module system is much better than using none at all.&lt;/p&gt;

&lt;h2 id='options_for_application_structure'&gt;Options for application structure&lt;/h2&gt;

&lt;p&gt;There are many different approaches that you can take, and mine is a combination of different patterns (especially the mediator and facade) that I have read about and explored with test projects.&lt;/p&gt;

&lt;p&gt;A good place to start reading upon the different options would be any of the below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://addyosmani.com/largescalejavascript/' title='Patterns For Large-Scale JavaScript Application Architecture'&gt;Patterns For Large-Scale JavaScript Application Architecture&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://www.addyosmani.com/resources/essentialjsdesignpatterns/book/' title='http://www.addyosmani.com/resources/essentialjsdesignpatterns/book/'&gt;Learning JavaScript Design Patterns&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://thinkrelevance.com/blog/2013/06/04/clojure-workflow-reloaded' title='My Clojure Workflow, Reloaded'&gt;My Clojure Workflow, Reloaded&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, though Backbone specific, &lt;a href='http://addyosmani.com/blog/'&gt;Addy Osmani&amp;#8217;s&lt;/a&gt; book, &lt;a href='http://addyosmani.github.io/backbone-fundamentals/'&gt;Developing Backbone.js Applications&lt;/a&gt;, has some really great ideas.&lt;/p&gt;

&lt;h2 id='my_approach'&gt;My approach&lt;/h2&gt;

&lt;p&gt;I do not believe that programming is about forcing your problem into design patterns, so I try to avoid implementing pattern specifics too much, and instead just follow the ideas and concepts of the design patterns that fit the problem more naturally.&lt;/p&gt;

&lt;p&gt;It is especially important to think of the problems that are specific in your applications domain, and to think about the best ways in which those problems can be solved &amp;#8212; sometimes you need a little of this pattern, and a bit of another.&lt;/p&gt;

&lt;p&gt;For BottleCRM, the biggest problem I have to solve, in regards to application structure, is the plugin system.&lt;/p&gt;

&lt;p&gt;Implementing a plugin system, and the ideas that it represents (the ability for other developers to hook in their own code and customisations), usually involves quite complicated APIs, interfaces, and other connecting parts. This can be quite troublesome to maintain, due to the large surface area of the code.&lt;/p&gt;

&lt;p&gt;As requirements of the plugin system change, changing it can be hard due to the amount of code that has already been written to interact with it. Enforcing backwards-compatibility is not an easy thing to do, especially as early on in the software development process the direction that the plugin system will take (in terms of what plugin developers will want to be able to achieve) is relatively unknown.&lt;/p&gt;

&lt;p&gt;In order to remove the complexity that is usually involved in a plugin system, I decided to not really have one. Though this sounds counter-intuitive, for an application that is almost all about plugins, it should become clearer as you read on.&lt;/p&gt;

&lt;p&gt;Instead of a plugin API, the core of the application would just be a plugin loader, and nothing else. It knows which plugins to start, and requires them. The plugins themselves do not need to require other plugins, or express their dependency on other plugins in any other way. Instead, all communication goes through an &lt;em&gt;event bus&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This removes the requirement for the plugin loader to do any special kind of dependency resolution, or handle connecting plugins to other plugins, and reduces the complexity of the application quite a bit.&lt;/p&gt;

&lt;p&gt;The application event bus is created by the module loader, and passed as a parameter to each plugins constructor. The plugin keeps a reference to this event bus, and using this reference can communicate with other components in the system via; en-queuing and handling messages, listening for and emitting events.&lt;/p&gt;

&lt;p&gt;In order to reduce complexity and boilerplate code within a plugin, it only has a small interface that it needs to conform to. This interface outlines that a plugin should have two functions (aside from the constructor): &lt;span class='monospace'&gt;initialize&lt;/span&gt; and &lt;span class='monospace'&gt;stop&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;Once all plugins have been instantiated, &lt;span class='monospace'&gt;initialize&lt;/span&gt; will be called, and &lt;span class='monospace'&gt;stop&lt;/span&gt; will be called when a plugin is to be disposed of, allowing it to shut down gracefully.&lt;/p&gt;

&lt;h2 id='the_event_bus'&gt;The event bus&lt;/h2&gt;

&lt;p&gt;The event bus has a couple of distinct parts, and the way that it is used by the components shapes the application structure.&lt;/p&gt;

&lt;p&gt;The parts are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;em&gt;pub/sub&lt;/em&gt; system&lt;/li&gt;

&lt;li&gt;A &lt;em&gt;message queue&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='pubsub'&gt;Pub/sub&lt;/h3&gt;

&lt;p&gt;A traditional &lt;em&gt;publish/subscribe&lt;/em&gt; system that allows components to &lt;span class='monospace'&gt;subscribe&lt;/span&gt; to events (by name), and other components to &lt;span class='monospace'&gt;publish&lt;/span&gt; events. The events can have extra data associated with them that provide context and describe what occurred.&lt;/p&gt;

&lt;p&gt;Components that &lt;span class='monospace'&gt;subscribe&lt;/span&gt; to events are called &lt;em&gt;consumers&lt;/em&gt;, and components that &lt;span class='monospace'&gt;publish&lt;/span&gt; events are &lt;em&gt;producers&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In BottleCRM, for the most part, events are used to describe things that have happened so that multiple consumers can react to a change in application state. An example of this may be to load extra data when a &lt;span class='monospace'&gt;signin:success&lt;/span&gt; event is published.&lt;/p&gt;

&lt;h3 id='the_message_queue'&gt;The message queue&lt;/h3&gt;

&lt;p&gt;components can register to &lt;span class='monospace'&gt;handle&lt;/span&gt; messages, and other components can &lt;span class='monospace'&gt;enqueue&lt;/span&gt; them. When you enqueue a message, the last component to register a handler for that message name will have its handler called. Messages will often contain other parameters that the handler should use to perform its work.&lt;/p&gt;

&lt;p&gt;Handler functions can allow the message to be passed to any previous handler that was registered if it would like to, allowing interception and modification of messages.&lt;/p&gt;

&lt;p&gt;A parameter that will often be passed as part of a message will be a callback function. For example, we might enqueue a database call to find all of users in the system. A callback function would be supplied along with the message for the handler to call with the result.&lt;/p&gt;

&lt;p&gt;This sort of messaging is used to expose all of the functionality that a plugin provides to the system. A short list of examples from BottleCRM would look like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;View creation&lt;/li&gt;

&lt;li&gt;Building models&lt;/li&gt;

&lt;li&gt;Saving models&lt;/li&gt;

&lt;li&gt;Searching the local cache&lt;/li&gt;

&lt;li&gt;Searching the remote database&lt;/li&gt;

&lt;li&gt;Navigating to a different local route&lt;/li&gt;

&lt;li&gt;Showing a view in a certain region&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The message queue, with few exceptions, is used to get other components to do work/jobs. These message names are usually phrased as commands. For example, a component may enqueue a &lt;span class='monospace'&gt;navigate:users&lt;/span&gt; message to get a router component to cause some navigation to occur. These messages change the state of the application.&lt;/p&gt;

&lt;p&gt;One interesting side effect to the message queue system is that it allows plugins to be initialised &lt;em&gt;after&lt;/em&gt; messages that it handles have been enqueued. This is because when the handler function is registered with the event bus, the event bus will dispatch messages to that function that already exist on the queue (if the handler function handles those messages).&lt;/p&gt;

&lt;h3 id='effects_of_using_this_structure'&gt;Effects of using this structure&lt;/h3&gt;

&lt;p&gt;The best thing about this system is that it allows components and plugins to express their dependencies in terms of &lt;em&gt;work&lt;/em&gt; rather than &lt;em&gt;workers&lt;/em&gt;. To make an example, instead of a plugin knowing that it depends on a &lt;span class='monospace'&gt;router&lt;/span&gt; component in order to perform navigation, it expresses that it wants something to do some navigation for it. This expression is displayed via the name of the message enqueued, in this example a &lt;span class='monospace'&gt;ui:navigate&lt;/span&gt; message.&lt;/p&gt;
&lt;div class='aside'&gt;
&lt;p&gt;
As an aside, I am likely to write a program to create a graph of these
&lt;em&gt;work dependencies&lt;/em&gt; that I will run the source code for BottleCRM
through &amp;mdash; it should be quite interesting to see.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This is great for decoupling. The components that are able to do the work can just handle the correct messages, and components that want work to be done can just enqueue work to be done. Neither component know implementation detail about the other, just that they are able perform a function, or would like a function to be performed.&lt;/p&gt;

&lt;p&gt;In terms of application structure, this allows us to operate with a low level of ceremony. The only stuff required is the plugin interface (the &lt;span class='monospace'&gt;initialize&lt;/span&gt; and &lt;span class='monospace'&gt;stop&lt;/span&gt; functions), and the handler function itself.&lt;/p&gt;

&lt;p&gt;Arguably, one of the disadvantages of this system is that it forces lots of the code structure to be asynchronous. This can lead to code that some think is more complicated to read, but I hope that it does not take too long for developers that are not familiar with the codebase to get used to it.&lt;/p&gt;

&lt;p&gt;I have found, however, that this style of code forces you to think about what happens when some work you request is not performed, or takes a long time to complete. For example, when requesting data from a remote database you may wish to render a view that shows that you are loading some data. This is, mostly, a nice trait that is forced by this no-guarantees approach.&lt;/p&gt;

&lt;p&gt;Rather than defining that you cannot run without another plugin being enabled (expressing a dependency on that plugin), you must handle the case that the work you requested might not be completed. It might be that you just do nothing (roughly the same as if your plugin has refused to load), however you may decide to follow a different course of action.&lt;/p&gt;

&lt;h3 id='problems_and_things_yet_to_be_done'&gt;Problems and things yet to be done&lt;/h3&gt;

&lt;p&gt;It is not all wonderful, and there are still lots of details that need to be ironed out.&lt;/p&gt;

&lt;p&gt;One of these is versions between plugins. Making sure that various plugins are compatible with other plugins with different versions is a hard problem to solve. I do not want to have to implement the sort of dependency system in which plugins depend on particular versions of other plugins, as this would undo all of the simplification that has been achieved.&lt;/p&gt;

&lt;p&gt;I would also like to make it easier to determine for plugins to determine whether handlers are registered for particular messages, without allowing too tight coupling between those plugins and handlers.&lt;/p&gt;

&lt;p&gt;I also need to develop a way that components can remove messages that they have enqueued, without them having been processed off of the queue. This is because some messages may be irrelevant or incorrect when applied at a later time. For example, if a &lt;span class='monospace'&gt;navigate:users&lt;/span&gt; message was enqueued, without a component to handle it, and some time later a component is initialised that does handle that message, it may be inappropriate for it to take any action.&lt;/p&gt;

&lt;p&gt;Another feature that I am looking into is a kind of pipeline flow, with multiple participants that do not know of the implementation details of each other &amp;#8212; sort of like a middleware pattern. I am not too sure on this yet, but it is worth some exploration.&lt;/p&gt;

&lt;h3 id='open_source_soon'&gt;Open source (soon)&lt;/h3&gt;

&lt;p&gt;The framework that I have built to develop the application is based on &lt;a href='backbonejs.org'&gt;Backbone.js&lt;/a&gt;, with some small additions in the form of a couple of &lt;span class='monospace'&gt;Backbone.View&lt;/span&gt; subclasses, and some subclasses of &lt;span class='monospace'&gt;Backbone.Collection&lt;/span&gt; for caching server models, and creating live data views for view classes.&lt;/p&gt;

&lt;p&gt;Of course, the biggest addition that makes this framework interesting is the event bus, and there is no reason that that could not be used in a non-Backbone.js project.&lt;/p&gt;

&lt;p&gt;As soon as I pull apart some of the application-specific parts from my framework, and tidy up the event bus code, I will be open sourcing it and putting it up on my &lt;a href='https://github.com/austinbirch/'&gt;Github&lt;/a&gt; profile.&lt;/p&gt;
&lt;!-- footnotes --&gt;</description>
    </item>
    
    <item>
      <title>Indie Game: The Movie</title>
      <link>http://austinbirch.co.uk/2012/06/18/indie-game-the-movie.html</link>
      <pubDate>Mon, 18 Jun 2012 00:00:00 +0100</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2012/06/18/indie-game-the-movie</guid>
      <description>&lt;p&gt;I finally got around to watching &lt;strong&gt;Indie Game: The Movie&lt;/strong&gt; today, and it was very, very good. One of my favourite documentary films, along with &lt;a href='http://www.objectifiedfilm.com/'&gt;Objectified&lt;/a&gt; and &lt;a href='http://www.helveticafilm.com/'&gt;Helvetica&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;At $9.99, it is an absolute steal. &lt;a href='http://buy.indiegamethemovie.com/'&gt;Get it here.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gesture Based Interfaces</title>
      <link>http://austinbirch.co.uk/2012/03/16/gesture_based_interfaces.html</link>
      <pubDate>Fri, 16 Mar 2012 00:00:00 +0000</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2012/03/16/gesture_based_interfaces</guid>
      <description>&lt;p&gt;As much as gesture based interface feel like the future, I think that some care needs to be taken in making sure that gestures fit the context.&lt;/p&gt;

&lt;p&gt;There has been a recent influx of apps, especially on the iOS platform, that require gestures to be used for nearly all interactions.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;Don&amp;#8217;t get me wrong, I love gestures in apps, and I use them often. However like all good design, I think that they need to be well thought out if they are to improve the user experience. It&amp;#8217;s all to easy to let new interaction methods be implemented as gimmicks, rather than as good design.&lt;/p&gt;

&lt;p&gt;I know this from experience, as I prototyped a note-taking app that was gesture driven. It was visually appealing, and I really liked the concept. However, when I stepped back and considered what the gestures added to the experience, I found that it was mostly extra work for the user.&lt;/p&gt;

&lt;p&gt;Like most design problems, using the right amount of gestures is extremely context specific, so there is not a sinle solution that fits every problem. However, it is definitely worth giving it the careful attention that it deserves.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chessable</title>
      <link>http://austinbirch.co.uk/2012/03/10/chessable.html</link>
      <pubDate>Sat, 10 Mar 2012 00:00:00 +0000</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2012/03/10/chessable</guid>
      <description>&lt;p&gt;&lt;a href='https://www.chessable.co.uk'&gt;&lt;img alt='chessable' src='/assets/img/chessable.png' /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To scratch an itch, I built &lt;a href='https://www.chessable.co.uk'&gt;chessable&lt;/a&gt;. chessable is a correspondence chess game with an uncluttered and responsive interface.&lt;/p&gt;

&lt;p&gt;I created it a few weeks ago, as other similar services were cluttered with ads, and laden with extra features. I wanted something simpler to use.&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id='which_devices_does_it_work_on'&gt;Which devices does it work on?&lt;/h2&gt;

&lt;p&gt;It is playable on any device which has support for the relatively modern HTML5 &amp;#38; CSS3 specs. The major parts of these that chessable leverages is the Canvas element, and font loading through font-face.&lt;/p&gt;

&lt;p&gt;The responsive layout is achieved using &lt;a href='http://www.getskeleton.com/'&gt;skeleton&lt;/a&gt;, which means that it scales well to almost any screen size. The main reason for opting for a responsive design was that chessable should be playable from anywhere, at any time. I think that it works quite well.&lt;/p&gt;

&lt;h2 id='how_its_made'&gt;How it’s made&lt;/h2&gt;

&lt;p&gt;The server is a &lt;a href='http://rubyonrails.org/'&gt;Rails 3&lt;/a&gt; app, and the client was built with HTML5, CSS, and JavaScript (compiling CoffeeScript to JavaScript via Rails). The chess validation library used is &lt;a href='https://github.com/jhlywa/chess.js'&gt;chess.js&lt;/a&gt;, which is really very good.&lt;/p&gt;

&lt;p&gt;The chessboard is drawn using HTML5 Canvas, and the chess pieces are loaded as a font, using font-face. The font contains symbols for the chess pieces mapped out as different letters. For example, drawing the letter &amp;#8216;p&amp;#8217; will draw a pawn.&lt;/p&gt;

&lt;h2 id='stuff_that_works_well'&gt;Stuff that works well&lt;/h2&gt;

&lt;p&gt;Overall the whole app works great. It&amp;#8217;s really simple to use, and pretty much &lt;strong&gt;just works&lt;/strong&gt;. I&amp;#8217;m reqlly happy with how it turned out.&lt;/p&gt;

&lt;p&gt;Using email notifications to let players know of events works really well. It lets the player get back to the game whenever they feel like playing.&lt;/p&gt;

&lt;p&gt;Being written as a web app, it is inherently cross-platform, which is really good. However , it being cross-platform doesn&amp;#8217;t mean that there is no specific work involved for targetting separate platforms.&lt;/p&gt;

&lt;h2 id='most_important_bug_fixes_to_make'&gt;Most important bug fixes to make&lt;/h2&gt;

&lt;p&gt;Even though I feel chessable works well, there are lots of things that I&amp;#8217;d like to fix, change and implement.&lt;/p&gt;

&lt;p&gt;Using a font for the pieces is (currently) responsible for a fair amount of the loading time for a chessboard, and a game preview. Loading a font through font-face, which is to be used with the HTML5 Canvas element, is troublesome. Waiting for &lt;span class='monospace'&gt;$(document).ready()&lt;/span&gt; before loading the game isn&amp;#8217;t enough for a cross-platform solution, as some browsers and some devices never seem to load the font (and therefore never displayed the pieces).&lt;/p&gt;

&lt;p&gt;The most bulletproof method I have found for ensuring that the pieces are displayed is to wait for &lt;span class='monospace'&gt;$(window).onload()&lt;/span&gt;. This is obviously much slower, as everything must be loaded before the game can begin loading.&lt;/p&gt;

&lt;p&gt;When there are lots of game previews to be generated on one view, this causes a very long, and unacceptable, loading time. At first this issue didn&amp;#8217;t present itself, but as more games were played, and as more game previews were being loaded (especially on the dashboard view), this has a really negative effect. &lt;strong&gt;Fixing the loading times is &amp;#35;1 on the priority list.&lt;/strong&gt; (see update below.)&lt;/p&gt;
&lt;p class='update'&gt;
Update:&lt;br /&gt;&lt;br /&gt;
After some more investigation, it became clear that although the font-face
loading was slowing things down, this wasn’t the cause of the slow load when
multiple game previews were being shown.
&lt;br /&gt;&lt;br /&gt;
The slow game preview loading was due to having to compute lots of moves to
calculate the board positions (from the PGN) for long games.
&lt;br /&gt;&lt;br /&gt;
This was solved by storing a
 &lt;a href='http://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation'&gt;
FEN notation&lt;/a&gt; of the game, and loading from that.
&lt;/p&gt;
&lt;h2 id='features_to_add'&gt;Features to add&lt;/h2&gt;

&lt;h3 id='game_invites_via_email'&gt;Game invites via email&lt;/h3&gt;

&lt;p&gt;Inviting an opponent by email is a feature that I really want to put in, as it would help attract new players to chessable. However, it can be a sensitive subject, as I don&amp;#8217;t want the system to be abused, using random email addresses to span people with chessable invites. Somehow I&amp;#8217;ll have to figure out a solution that allows flexibility but minimises the risk for abuse.&lt;/p&gt;

&lt;h3 id='ranking_system__some_stats'&gt;Ranking system &amp;amp; some stats&lt;/h3&gt;

&lt;p&gt;Although chessable is designed to be played by mostly casual players, having a ranking system and some basic statistics would be a nice way for players to measure their progress. However, the problem with this is that as this is correspondence chess, there is plenty of opportunity for cheaters to abuse the system by having a computer play for them. This would be a hard problem to solve, but a very neat feature if I could add it.&lt;/p&gt;

&lt;h3 id='redesign_some_components'&gt;Redesign some components&lt;/h3&gt;

&lt;p&gt;I need to redesign the player information, and game preview panels pretty quickly. They are not good, and do not make proper use of screen space. There are other areas that I need to tidy up too, but this is an obvious one.&lt;/p&gt;

&lt;h3 id='closing_thoughts'&gt;Closing Thoughts&lt;/h3&gt;

&lt;p&gt;Overall, this weekend project ended up drawing far more of my interest than I meant for it to do. I&amp;#8217;m definitely going to keep developing it so that it gets better and better.&lt;/p&gt;

&lt;p&gt;If you can create something, and still enjoy using it afterwards (despite knowing its flaws), you have done quite well.&lt;/p&gt;

&lt;p&gt;I am happy to say that I enjoy using chessable.&lt;/p&gt;

&lt;p&gt;If you like playing chess, you should &lt;a href='https://www.chessable.co.uk'&gt;go and try it out.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jeremy Wade</title>
      <link>http://austinbirch.co.uk/2011/12/05/jeremy-wade.html</link>
      <pubDate>Mon, 05 Dec 2011 00:00:00 +0000</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2011/12/05/jeremy-wade</guid>
      <description>&lt;p&gt;There is no rule that states that inspirational people have to be working it the same field as you. I met somebody that is inspirational to me &lt;a href='http://www.jeremywade.co.uk/'&gt;Jeremy Wade&lt;/a&gt; (&lt;a href='http://animal.discovery.com/tv/river-monsters/'&gt;Wikipedia&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;He is somebody that both physically, and metaphorically, explores beneath the surface to discover what is really there.&lt;/p&gt;

&lt;p&gt;I feel privileged to have met somebody that is so dedicated to their field, and that has such a brilliantly expansive domain knowledge.&lt;/p&gt;

&lt;p&gt;&lt;img alt='jeremy_wade' src='/assets/img/jeremy_wade.jpg' /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Early Esc Spritesheet</title>
      <link>http://austinbirch.co.uk/2011/11/01/early-esc-spritesheet.html</link>
      <pubDate>Tue, 01 Nov 2011 00:00:00 +0000</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2011/11/01/early-esc-spritesheet</guid>
      <description>&lt;p&gt;As a little sneak preview of my upcoming iOS game, Esc, here is an early spritesheet (well, a section of) that might give a feel for the art direction of the game.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;&lt;img alt='early_spritesheet' src='/assets/img/early_esc_spritesheet.png' /&gt;&lt;/p&gt;

&lt;p&gt;Obviously it draws lots of inspiration from &lt;a href='http://thelettervsixtim.es/'&gt;VVVVVV&lt;/a&gt; in terms of art style, and as I&amp;#8217;m using a modified C64 colour palette, the C64 in general.&lt;/p&gt;

&lt;p&gt;The game itself is heavily based on the ideas of my &lt;a href='/2011/08/24/ludum-postmortem.html'&gt;Ludum Dare Entry&lt;/a&gt;, and I found Ludum Dare to be a great way to test game ideas &amp;#8212; it&amp;#8217;s kind of like releasing a traditional MVP.&lt;/p&gt;

&lt;p&gt;There is still lots to finish before releasing Esc, but the major structure is therem, and it feels promising.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ll post updates here when I feel I have something worth reporting.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>flightnote Cards</title>
      <link>http://austinbirch.co.uk/2011/10/19/flightnote-cards.html</link>
      <pubDate>Wed, 19 Oct 2011 00:00:00 +0100</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2011/10/19/flightnote-cards</guid>
      <description>&lt;p class='update'&gt;This is a followup post to
 &lt;a href='/2011/08/17/sometimes-make-things.html'&gt;&amp;ldquo;Sometimes, Make Things&amp;rdquo;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;The promotional/business card for &lt;a href='https://flightnote.co.uk'&gt;flightnote&lt;/a&gt; have been printed. The final design is very similar to the paper-based mockups that I created before.&lt;/p&gt;

&lt;p&gt;Here they are:&lt;/p&gt;

&lt;p&gt;&lt;img alt='flightnote_cards' src='/assets/img/flightnote_cards.jpg' /&gt;&lt;/p&gt;

&lt;p&gt;And to compare them to the paper-based mockups that I created:&lt;/p&gt;

&lt;p&gt;&lt;img alt='flightnote_mock_cards' src='/assets/img/mock_flightnote_cards.jpg' /&gt;&lt;/p&gt;

&lt;p&gt;The final prints are exactly what I imagined they would be, and I couldn&amp;#8217;t be more pleased. The printing company were effortlessly professsional, which made the whole printing experience painless.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ll be attaching some promotional codes to a few of these, and then sending them out very soon. I can&amp;#8217;t wait!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ludum Postmortem</title>
      <link>http://austinbirch.co.uk/2011/08/24/ludum-postmortem.html</link>
      <pubDate>Wed, 24 Aug 2011 00:00:00 +0100</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2011/08/24/ludum-postmortem</guid>
      <description>&lt;p&gt;Last weekend I took part, for the first time, in &lt;a href='http://ludumdare.com'&gt;Ludum Dare&lt;/a&gt;, a competition in which you have &lt;strong&gt;48&lt;/strong&gt; hours to create a game from scratch. I&amp;#8217;ll be doing the next one too.&lt;/p&gt;

&lt;p&gt;I don&amp;#8217;t usually make games, but I enjoyed the challenge. As Rails 3.1 will use &lt;a href='http://coffeescript.org/'&gt;CoffeeScript&lt;/a&gt; by default, I thought it would be the perfect change to get to know it a bit better.&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id='what_did_i_make'&gt;What did I make?&lt;/h2&gt;

&lt;p&gt;Each Ludum Dare has its own theme, and the theme for Ludum Dare 21 was &amp;#8220;Escape.&amp;#8221; I made a game called &lt;em&gt;65-73-63&lt;/em&gt;, which is &amp;#8220;esc&amp;#8221; in hex (utf-8).&lt;/p&gt;

&lt;p&gt;I initially designed it to be a traditional 2D side scrller, but with a small twist. The twist being that you did not control the player, but instead you are in control of the environment. You would operate a series of bridges, doors, and boosters to help the protaganist, Tom, escape from a series of overgrown Earth Bees that were chasing him. How the game turned out was a bit different.&lt;/p&gt;

&lt;p&gt;Here&amp;#8217;s a list of the main features I wanted to include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An array of different objects to control, including doors, bridges, launchers, and boosters.&lt;/li&gt;

&lt;li&gt;Random level generation, so that the game would be endless.&lt;/li&gt;

&lt;li&gt;Very basic, blocky art. Simple is nice sometimes.&lt;/li&gt;

&lt;li&gt;A simple scoring system, which reflected how far you had managed to get.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='what_did_it_end_up_like'&gt;What did it end up like?&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;65-73-63&lt;/em&gt; ended up half the game I imagined it to be. For a few reasons, I used up all of my time.&lt;/p&gt;

&lt;p&gt;One of the things that annoyed me most was the the final submissing only included bridges to operate. This made the game far more boring than originally intended. I still think the idea was good, and I will finish adding the parts that did not make it later. I also never got around to implementing the random level generation, which was to be another important feature. Random level generation meant the level could be endless, making it a &lt;a href='http://www.canabalt.com/'&gt;canabalt&lt;/a&gt;-style dash-until-death game.&lt;/p&gt;

&lt;h2 id='things_that_slowed_me_down'&gt;Things that slowed me down&lt;/h2&gt;

&lt;p&gt;I started it half a day late, as I didn&amp;#8217;t realise it was that weekend.&lt;/p&gt;

&lt;p&gt;Learning CoffeeScript at the same time definitely made things take much longer, especially at the beginning.&lt;/p&gt;

&lt;p&gt;Not having software that I needed installed, and then trying to download it and my connection dying. This was very annoying, but, these things happen.&lt;/p&gt;

&lt;h2 id='things_i_maybe_should_have_done_differently'&gt;Things I, maybe, should have done differently&lt;/h2&gt;

&lt;p&gt;I should have been more prepared, which would have meant knowing that it was on, and having the right stuff installed.&lt;/p&gt;

&lt;p&gt;I used this as an opportunity to learn some CoffeeScript, if I wanted to make the best of the time, I should have stuck to things I already knew.&lt;/p&gt;

&lt;h2 id='thoughts_on_coffeescript'&gt;Thoughts on CoffeeScript&lt;/h2&gt;

&lt;p&gt;It is so great that I never want to use plain JavaScript again. Ever. The syntax is very concise, which works really well. I love the use of indentation rather than symbols such as braces. The addition of simple Class structures make things much easier (though you have to be careful when splitting your code into multiple files, CoffeeScript wraps each one in an anonymous function.)&lt;/p&gt;

&lt;h2 id='where_to_play_it_and_screenshots'&gt;Where to play it, and screenshots&lt;/h2&gt;

&lt;p&gt;You can play &lt;em&gt;65-73-63&lt;/em&gt; &lt;a href='http://austinbirch.co.uk/65-73-63/'&gt;here&lt;/a&gt;, and that is where I keep the most updated version.&lt;/p&gt;

&lt;p&gt;&lt;img alt='start' src='/assets/img/65-73-63-start.png' /&gt; &lt;img alt='jump' src='/assets/img/65-73-63-jump.png' /&gt;&lt;/p&gt;

&lt;h2 id='end'&gt;End&lt;/h2&gt;

&lt;p&gt;Hopefully I will be better prepared for the next one, and let’s hope that I learn from the mistakes I made this time round.&lt;/p&gt;

&lt;p&gt;The end of a fun, but a bit exhausting weekend. : )&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sometimes, Make Things</title>
      <link>http://austinbirch.co.uk/2011/08/17/sometimes-make-things.html</link>
      <pubDate>Wed, 17 Aug 2011 00:00:00 +0100</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2011/08/17/sometimes-make-things</guid>
      <description>&lt;p&gt;When designing things which are intended for print, it’s all too easy to sit in front of software and make endless adjustments, but never really knowing what the end product is going to be like as a physical object.&lt;/p&gt;

&lt;p&gt;Sometimes, you should make things. For &lt;a href='https://flightnote.co.uk'&gt;flightnote&lt;/a&gt;, I am creating some promotional &amp;#8221;Business Cards&amp;#8220; to give away. I wanted them to be a little different than the traditional rectangular ordeal, so I’ve been experimenting with a few different options.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;The idea that I have settled on is a circular card, with colour on both sides.&lt;/p&gt;

&lt;p&gt;However, until I made some mock versions, I was not entirely sure. Making something you can touch and try is really worth it. Even if the materials are not right, and the printing is not great, you still get a feel for &lt;strong&gt;how&lt;/strong&gt; it will work.&lt;/p&gt;

&lt;p&gt;Making cheap, quick, mockups reduce the risk of making a large mistake later on. You can make as many as you like and make as many changes as you want, allowing for lots of exploration.&lt;/p&gt;

&lt;p&gt;I made these mockups out of paper that I roughly cut into 2.5&amp;#8243; circles, and then glued the front and back sides together. I am now sure that this is the idea I want to follow. All that remains is to finalise the design, and find somewhere that wil print them.&lt;/p&gt;

&lt;p&gt;&lt;a href='http://instagr.am/p/Kg2mD/'&gt;&lt;img alt='flightnote cards' src='/assets/img/mock_flightnote_cards.jpg' /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>All Of The Lights Typography</title>
      <link>http://austinbirch.co.uk/2011/08/11/all-of-the-lights-typography.html</link>
      <pubDate>Thu, 11 Aug 2011 00:00:00 +0100</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2011/08/11/all-of-the-lights-typography</guid>
      <description>&lt;iframe frameborder='0' height='338' src='https://www.youtube-nocookie.com/embed/HAfFfqiYLp0' width='600'&gt;&amp;nbsp;&lt;/iframe&gt;
&lt;p&gt;There is some really great typography in this video. Be warned though &amp;#8212; &amp;#8220;This video has been identified by Epilepsy Action to potentially trigger seizures for people with photosensitive epilepsy.&amp;#8221;&lt;/p&gt;

&lt;p&gt;The type comes in at about one minute.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Don’t Settle</title>
      <link>http://austinbirch.co.uk/2011/06/14/dont-settle.html</link>
      <pubDate>Tue, 14 Jun 2011 00:00:00 +0100</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2011/06/14/dont-settle</guid>
      <description>&lt;p&gt;Things that make you work smarter, are worth it. Don&amp;#8217;t think any other way. If you can afford (sensibly) to purchase something that you think will make a real impact to the way you work, you owe it to yourself to do it.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;If you spend lots of time using a piece of equipment, be it a touchable physical item, or a piece of software, you should ensure you use things which allow you to be more productive.&lt;/p&gt;

&lt;h2 id='an_example'&gt;An example:&lt;/h2&gt;

&lt;p&gt;I listen to music whilst I work, I find it makes me more productive. Spending hours wearing a pair of headphones that are not comfortable, or that don’t sound right, reduces some of that extra productivity. I very recently invested in a nicer pair of headphones &amp;#8212; &lt;a href='http://uk.akg.com/product-detail-2821/q460wht.html'&gt;AKG Q460s&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;They sound &lt;strong&gt;great&lt;/strong&gt;, and are very very comfortable. I no longer spend time getting frustrated with uncomfortable and poor sounding headphones. A tiny distraction like that can ruin a long run of productivity. The tiny distractions all add up to have a large effect.&lt;/p&gt;

&lt;h2 id='dont_settle_for_something_that_is_not_right'&gt;Don&amp;#8217;t settle for something that is not right.&lt;/h2&gt;

&lt;p&gt;Don&amp;#8217;t settle for that software which only nearly does what you need, or that okay chair (a chair is a chair, right?), don&amp;#8217;t settle for that mouse that will &amp;#8220;just do.&amp;#8221; Spend the extra money if you can, and you will reap the rewards.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Take Some Time</title>
      <link>http://austinbirch.co.uk/2011/05/31/take_some_time.html</link>
      <pubDate>Tue, 31 May 2011 00:00:00 +0100</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2011/05/31/take_some_time</guid>
      <description>&lt;p&gt;I easily overwork. And I usually tell myself that it is not a bad thing. I read continuously that it is a bad habit, and still tell myself that working non-stop is fine. It is as though I think myself to be the exception to the rule. It has become clear however, that it is just unsustainable. I won&amp;#8217;t be doing it again.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;I will allow myself time to do &lt;strong&gt;something different&lt;/strong&gt;. It can and will be anything. Side-projects, reading, writing, or whatever else that is not my current attention drain.&lt;/p&gt;

&lt;h2 id='for_the_last_while'&gt;For the last while&lt;/h2&gt;

&lt;p&gt;I have been working non-stop on &lt;a href='https://flightnote.co.uk'&gt;flightnote&lt;/a&gt;. Which is something I love doing, but I have not really done anything else at all, if you don&amp;#8217;t include working another (though simple) job too. Lately I reached a point in which working on flightnote was a journey of frustration until something was achieved. I would just continue working, haphazardly, until I finished what I was working on. It could have been a simple bug-fix or feature, yet I would be riddled with frustration until it was done. Most often, I would get it finished, but the journey wouldn&amp;#8217;t feel as &lt;em&gt;natural&lt;/em&gt; as it usually felt. I ended up feeling quite dissatisfied with things, and not happy with a half-hearted implementation of whatever that specific to-do might have been.&lt;/p&gt;

&lt;h2 id='things_will_change_though'&gt;Things will change, though.&lt;/h2&gt;

&lt;p&gt;The first two days of this week I spent with my girlfriend, painting her room and constructing a new bed. This was a welcome break, and though it was not something most would consider leisure time, fun, or a break &amp;#8212; I did consider it to be.I thoroughly enjoyed it and it gave me time to slow my brain down, which in turn, give me some time to think clearly. It is surprising how much more efficient doing something completely unrelated can be, when compared to just pushing on regardless.&lt;/p&gt;

&lt;h2 id='sometimes_you_just_need_to_stop'&gt;Sometimes, you just need to stop.&lt;/h2&gt;

&lt;p&gt;Stop and take some time. Stop and let yourself recover a little bit. Maybe not a full recovery, as a little bit of pressure can be quite useful. However, do stop and take a moment to collect. Everybody can be overworked. You just end up becoming less efficient &amp;#8212; you start going backwards.&lt;/p&gt;

&lt;p&gt;Anyway, I must get back to doing some work.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Site Redesign</title>
      <link>http://austinbirch.co.uk/2011/05/08/site_redesign.html</link>
      <pubDate>Sun, 08 May 2011 00:00:00 +0100</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2011/05/08/site_redesign</guid>
      <description>&lt;p class='update'&gt;
&lt;em&gt;Updated 13/08/2011:&lt;/em&gt;&lt;br /&gt;
This no longer applies, as it relates to the previous blog&amp;rsquo;s design. Maybe I will
write a new article about the current design later.
&lt;/p&gt;
&lt;p&gt;I have redesigned my blog to make it simpler, less decorated, and more purposeful. What follows is a break-down of the design decisions involved.&lt;/p&gt;
&lt;!--more--&gt;
&lt;h2 id='what_is_my_blog_for'&gt;What is my blog for?&lt;/h2&gt;

&lt;p&gt;The articles I want to write for my blog are longer in form, and less media intensive than many blogs. It is meant to be all about the words, so typography and legibility were very important factors in the redesign.&lt;/p&gt;

&lt;h2 id='typography'&gt;Typography&lt;/h2&gt;

&lt;p&gt;Reading longer forms of text is made more comfortable when things such as measure, typeface selection, vertical rhythm, and colour are picked carefully.&lt;/p&gt;

&lt;p&gt;Georgia is used as the primary typeface for everything. Visual hierarchy between type is achieved by mainly using size.&lt;/p&gt;

&lt;p&gt;I selected Georgia due to it&amp;#8217;s large x-height, and therefore good legibility. I tried using some of the serif typefaces on the &lt;a href='http://www.google.com/webfonts'&gt;Google Web Fonts&lt;/a&gt; library, but I did not find any that I felt produced as clear type. Georgia also has a neat advantage in that is is installed on most operating systems by default too, which helps in cross-compatibility.&lt;/p&gt;

&lt;p&gt;I selected a measure of around 76 characters for the main content column, which is on the high side of the widely regarded ideal measure, but I like it. It is low enough not to make line length too intimidating.&lt;/p&gt;

&lt;p&gt;Font sizing is achieved using a new CSS3 unit, the &lt;a href='http://www.w3.org/TR/css3-values/#relative0'&gt;&amp;#8220;rem&amp;#8221;&lt;/a&gt;. Jonathan Snook recently wrote a very comprehensive article on its usage &lt;a href='http://snook.ca/archives/html_and_css/font-size-with-rem'&gt;here&lt;/a&gt; so I will skip going into too much detail. He explains it far better than I could anyway. As a fall-back, I have declared the pixel unit first. Any browser that supports the &amp;#8220;rem&amp;#8221; unit, will override that first declaration.&lt;/p&gt;

&lt;p&gt;I have used a traditional typographical scale, and selected the header and paragraph sizes as follows (I will define the values in pixels from now on.)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;h1 &amp;#8212; 36px&lt;/li&gt;

&lt;li&gt;h2 &amp;#8212; 24px&lt;/li&gt;

&lt;li&gt;h3 &amp;#8212; 21px&lt;/li&gt;

&lt;li&gt;p &amp;#8212; 16px&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Selecting a base size of 16px means that I could decide upon the vertical rhythm. The vertical rhythm is defined by the baseline grid. To define the baseline grid I reset all margins and paddings, and set the leading (line-height in CSS) to define the grid.&lt;/p&gt;

&lt;p&gt;Any adjustments made in padding or margin need to total to a multiple of the leading. You can read up on setting type to a baseline grid on &lt;a href='http://www.alistapart.com/articles/settingtypeontheweb/'&gt;A List Apart&lt;/a&gt;, where again, it would be explained better than I could do.&lt;/p&gt;

&lt;p&gt;I set my leading at just under 140% of my paragraph font size, to keep the numbers nice and round. 140% of 16px is 22.4px, so I&amp;#8217;ve used 22px. Usually it pays to increase the leading with a longer measure, and to use =&amp;gt;140% of the type size, however with the large x-height of Georgia, it seems to be fine at just under 140%.&lt;/p&gt;

&lt;h2 id='structure'&gt;Structure&lt;/h2&gt;

&lt;p&gt;The structure of the new design is simple, and allows unobtrusive reading. It is easy to know where everything is &amp;#8212; there are only two columns!&lt;/p&gt;

&lt;p&gt;I used a customised version of the &lt;a href='http://960.gs/'&gt;960.gs&lt;/a&gt; grid system to make it really simple to define the columns.&lt;/p&gt;

&lt;p&gt;I tried aligning the content to the center, but it felt like the article copy was floating too far to the right. Pushing everything to the left meant that reading longer pieces of text did not feel awkward with the introduction of too much white space.&lt;/p&gt;

&lt;p&gt;Keeping article headers in the first column separates them well from the article itself, and allows me to use slightly larger sub-headings in the article.&lt;/p&gt;

&lt;p&gt;I think I might come up with a way of keeping track of your position in the article using the space in the first column, I&amp;#8217;m rather jealous that &lt;a href='http://stevelosh.com/'&gt;Steve Losh&lt;/a&gt; has an extremely neat implementation of this &amp;#8212; see an example on one of his &lt;a href='http://stevelosh.com/blog/2010/09/coming-home-to-vim/'&gt;posts&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id='colour'&gt;Colour&lt;/h2&gt;

&lt;p&gt;Colour is really simple. #333 for the type, variations on this for borders and content-separating borders. The link colour, #902a2b, is a slightly brighter version of red than the logo (#762223), to make the links a little more contrasting. I tried using the logo colour itself, but it was too hard to see amongst the copy. Hovering a link causes it to brighten slightly more to #9e2d2f, and an underline makes it further obvious.&lt;/p&gt;

&lt;h2 id='final_thoughts'&gt;Final thoughts&lt;/h2&gt;

&lt;p&gt;I am pretty happy with how it turned out, I think it does what it is meant to do, and it does it without shouting for attention. It is unobtrusive, but still pleasant.&lt;/p&gt;

&lt;h2 id='your_thoughts'&gt;Your thoughts&lt;/h2&gt;

&lt;p&gt;Let me know what you think via twitter, my username is &lt;a href='http://twitter.com/austinbirch'&gt;@austinbirch&lt;/a&gt;. Aim corrections and suggestions that way too. Thanks.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>flightnote</title>
      <link>http://austinbirch.co.uk/2011/03/15/flightnote.html</link>
      <pubDate>Tue, 15 Mar 2011 00:00:00 +0000</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2011/03/15/flightnote</guid>
      <description>&lt;p&gt;Enter &lt;a href='http://flightnote.co.uk'&gt;flightnote&lt;/a&gt;, a web application, under development by me, for sharing your flying logbook.&lt;/p&gt;

&lt;p&gt;When &lt;a href='http://flightnote.co.uk'&gt;flightnote&lt;/a&gt; goes live, you will be able to keep an &lt;strong&gt;online backup of your flights&lt;/strong&gt;, &lt;strong&gt;share media and notes from your flights&lt;/strong&gt;, and &lt;strong&gt;keep up to date with your friends flights too&lt;/strong&gt;. It is going to be great.&lt;/p&gt;
&lt;!--more--&gt;
&lt;p&gt;The idea behind &lt;a href='http://flightnote.co.uk'&gt;flightnote&lt;/a&gt; is that logbooking on the computer is very annoying &amp;#8212; &lt;a href='http://flightnote.co.uk'&gt;flightnote&lt;/a&gt; is going to solve this problem. Entering your flights will be easy, and stress free.&lt;/p&gt;

&lt;p&gt;You will also be able to print out your logbook (in the same format as your paper-based logbook) and view statistics too mdash; us pilots love that sort of thing.&lt;/p&gt;

&lt;p&gt;It will be mobile &amp;#8212; using any recent smartphone or tablet (those that support HTML5 will work best), you will be able to update, view, and share whilst on the go.&lt;/p&gt;

&lt;p&gt;There won&amp;#8217;t be any software to install or maintain &amp;#8212; the application, and your flight data, will live securely on the internet, giving you access to it from web browsers on a variety of devices.&lt;/p&gt;

&lt;p&gt;You should head to the &lt;a href='http://flightnote.co.uk'&gt;flightnote&lt;/a&gt; site, and &lt;strong&gt;subscribe to the mailing list&lt;/strong&gt;. You will be alerted to launch dates, exciting news, and hopefully get some excellent deals &amp;#38; promotions too.&lt;/p&gt;

&lt;p&gt;Get ready to experience logbook keeping in an entirely different way.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>drop_dead single-player</title>
      <link>http://austinbirch.co.uk/2011/02/19/drop_dead_single_player.html</link>
      <pubDate>Sat, 19 Feb 2011 00:00:00 +0000</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2011/02/19/drop_dead_single_player</guid>
      <description>&lt;p&gt;drop_dead is now a (virtually) complete single-player game!&lt;/p&gt;

&lt;p&gt;&lt;img alt='drop_dead' src='/assets/img/drop_dead_single_player.png' /&gt;&lt;/p&gt;

&lt;p&gt;There are ten levels to beat, each with a differing level of difficulty.&lt;/p&gt;

&lt;p&gt;You should really give it a go &lt;a href='http://austinbirch.co.uk/drop_dead/'&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let me know on &lt;a href='http://twitter.com/austinbirch'&gt;twitter&lt;/a&gt; if you beat it, with an attached screenshot, &amp;#38; I will put you on the drop_dead page labelled as a cool person.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>drop_dead: a bit more playable!</title>
      <link>http://austinbirch.co.uk/2011/02/03/drop_dead-a-bit-more-playable.html</link>
      <pubDate>Thu, 03 Feb 2011 00:00:00 +0000</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2011/02/03/drop_dead-a-bit-more-playable</guid>
      <description>&lt;p&gt;I have added a target height for the running player to reach, and added the ability for the AI player to be switched on and off.&lt;/p&gt;

&lt;p&gt;The life system is also working, so it is more playable than it was &amp;#8212; you can win &amp;#38; you can lose.&lt;/p&gt;

&lt;p&gt;Find someone else, and play it &lt;a href='/drop_dead/'&gt;here&lt;/a&gt;, then let me know what you think on &lt;a href='https://twitter.com/austinbirch/'&gt;twitter&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>drop_dead update, again</title>
      <link>http://austinbirch.co.uk/2010/12/16/dropdead-update-again.html</link>
      <pubDate>Thu, 16 Dec 2010 00:00:00 +0000</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2010/12/16/dropdead-update-again</guid>
      <description>&lt;p&gt;&lt;a href='/drop_dead/'&gt;&lt;img alt='drop_dead' src='/assets/img/ai.png' /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Things I have added:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Added a very very simple AI that is brilliantly annoying as an opponent.&lt;/li&gt;

&lt;li&gt;Simple life system &amp;#38; ability to restart when dead too, which is nice.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The AI will be removed when the multiplayer features are added but it is helpful not to have to try and control two players to test the game.&lt;/p&gt;

&lt;p&gt;Check it out &lt;a href='/drop_dead/'&gt;here&lt;/a&gt;, and let me know what you think &lt;a href='https://twitter.com/austinbirch/'&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>drop_dead update</title>
      <link>http://austinbirch.co.uk/2010/12/14/dropdead-update-2.html</link>
      <pubDate>Tue, 14 Dec 2010 00:00:00 +0000</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2010/12/14/dropdead-update-2</guid>
      <description>&lt;p&gt;&lt;a href='/drop_dead/'&gt;&lt;img alt='drop_dead' src='/assets/img/collision_detection.png' /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The player can now fall of of blocks, using horrendously inefficient collision detection, but at least he does not hang about in the air indefinitely. I will rewrite all of the collision detection later, for now I just want to try and get on to WebSockets and adding a simple scoring system now!&lt;/p&gt;

&lt;p&gt;Let me know what you think on &lt;a href='https://twitter.com/austinbirch/'&gt;twitter&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>drop_dead</title>
      <link>http://austinbirch.co.uk/2010/11/29/dropdead.html</link>
      <pubDate>Mon, 29 Nov 2010 00:00:00 +0000</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2010/11/29/dropdead</guid>
      <description>&lt;p&gt;&lt;a href='/drop_dead/'&gt;&lt;img alt='drop_dead' src='/assets/img/drop_dead.png' /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;drop_dead is a multiplayer HTML5 Canvas/WebSockets experiment that I am playing with, in order to familiarise myself with those technologies. I will open-source it when I have got it to a point in which it is usable at all &amp;#8212; and that should be soon. View Source if you are really too impatient for that.&lt;/p&gt;

&lt;p&gt;I will try and keep an updated version available &lt;a href='/drop_dead/'&gt;here&lt;/a&gt;, but it will be completely broken, and equally unfinished, at various points in time.&lt;/p&gt;

&lt;p&gt;The basic concept of the game is this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Players try to drop blocks on other players heads&lt;/li&gt;

&lt;li&gt;If you are dropping blocks on runners, points for hitting them&lt;/li&gt;

&lt;li&gt;If you are a runner, points for climbing on droppped blocks and reaching the top&lt;/li&gt;

&lt;li&gt;Winners from both sides are players which have the most points&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is a bit of a combination of some currently popular ideas.&lt;/p&gt;

&lt;p&gt;Try it out, and let me know what you think about it on &lt;a href='https://twitter.com/austinbirch/'&gt;twitter&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Flying with my Dad</title>
      <link>http://austinbirch.co.uk/2010/11/28/flying-with-my-dad.html</link>
      <pubDate>Sun, 28 Nov 2010 00:00:00 +0000</pubDate>
      <author>hello@austinbirch.co.uk (Austin Birch)</author>
      <guid>http://austinbirch.co.uk/2010/11/28/flying-with-my-dad</guid>
      <description>&lt;p&gt;I managed to the chance to take my Dad out for his first flight with me on the 26th of this month. It turned out to be a really good day, as the weather was perfect, though it was a little cold (below zero before leaving! I had to de-ice the aeroplane).&lt;/p&gt;

&lt;p&gt;My Dad thoroughly enjoyed himself, and as the weather had postponed our numerous prior plans, he deserved the lovely weather.&lt;/p&gt;

&lt;p&gt;Some photographs are below, and some more are on &lt;a href='http://www.flickr.com/photos/austinbirch/sets/72157625481603390'&gt;flickr&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Me &amp;amp; Dad' src='/assets/img/me_and_dad.png' /&gt; &lt;img alt='Return Leg' src='/assets/img/front_window.png' /&gt; &lt;img alt='Shadow on the Wing' src='/assets/img/shadow_on_wing.png' /&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
